plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven { url 'https://jitpack.io'}
    mavenCentral()
}
dependencies {
    //기본
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //jpa + mariadb
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    annotationProcessor('org.projectlombok:lombok')
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    //gson
    implementation "com.google.code.gson:gson"
    //email 로그인 인증
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //amamzon s3
    implementation group: 'io.awspring.cloud', name: 'spring-cloud-starter-aws', version: '2.4.2'
    //iamimport => 결제 (비공식 maven)
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
    //kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

}

tasks.named('test') {
    useJUnitPlatform()
}
